"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ RAG API
"""

import requests
import os
import sys

def upload_document(file_path: str, api_token: str = "rag_api_secret_token_2024"):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –≤ RAG API"""
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return None
    
    url = "http://localhost:8000/upload"
    headers = {"Authorization": f"Bearer {api_token}"}
    
    try:
        with open(file_path, "rb") as f:
            files = {"file": f}
            response = requests.post(url, headers=headers, files=files)
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
            print(f"üìÑ ID —Ñ–∞–π–ª–∞: {result['file_id']}")
            print(f"üìù –ò–º—è —Ñ–∞–π–ª–∞: {result['filename']}")
            print(f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞–Ω–∫–æ–≤: {result['chunks_count']}")
            print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
            return result['file_id']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def query_document(question: str, api_token: str = "rag_api_secret_token_2024"):
    """–ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º"""
    
    url = "http://localhost:8000/query"
    headers = {
        "Authorization": f"Bearer {api_token}",
        "Content-Type": "application/json"
    }
    data = {"question": question}
    
    try:
        response = requests.post(url, headers=headers, json=data)
        
        if response.status_code == 200:
            result = response.json()
            print(f"\nü§ñ –û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å: '{question}'")
            print(f"üìù {result['answer']}")
            print(f"üìö –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(result['context_documents'])}")
            return result
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üìö –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ RAG API")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 upload_document.py <–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É>")
        print("–ü—Ä–∏–º–µ—Ä: python3 upload_document.py document.pdf")
        return
    
    file_path = sys.argv[1]
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    file_id = upload_document(file_path)
    
    if file_id:
        print(f"\nüéâ –î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω! ID: {file_id}")
        
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
        print("\nüí¨ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
        
        try:
            while True:
                question = input("\n‚ùì –í–∞—à –≤–æ–ø—Ä–æ—Å: ")
                if question.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥']:
                    break
                query_document(question)
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç")

if __name__ == "__main__":
    main() 